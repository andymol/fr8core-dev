@using Newtonsoft.Json
@model Web.ViewModels.NegotiationVM
@{ Layout = "~/Views/Shared/_Blank.cshtml"; }
@section bodyStyle {overflow-y:scroll;}
@section immediateScripts
{
    @Scripts.Render("~/bundles/js/jquery")
    @Scripts.Render("~/bundles/js/select2")    
    @Scripts.Render("~/bundles/js/jqueryvalidate")

    <script src="/Content/js/KwasantCommon.js" type="text/javascript"></script>
    <script src="/Content/js/Kwasant/Popup.js"></script>
    <link rel="stylesheet" type="text/css" href="/Content/css/NegotiationWidgets.css" />

    <script src="/Content/js/Kwasant/NegotiationWidgets.js" type="text/javascript"></script>

    <script>
        var widget;
        $(function() {
            var settings = {
                
            };
            
            var questions = @Html.Raw(JsonConvert.SerializeObject(Model.Questions, Formatting.Indented));
            
            for (var i = 0; i < questions.length; i++) {
                for (var j = 0; j < questions[i].Answers.length; j++) {
                    var a = questions[i].Answers[j];
                    if (a.EventStartDate != null)
                        a.EventStart = new Date(a.EventStartDate);
                    if (a.EventEndDate != null)
                        a.EventEnd = new Date(a.EventEndDate);
                }
            }

            var initialValues = {
                Id: @(Model.Id == null? "null" : Model.Id.ToString()),
                BookingRequestID: @Model.BookingRequestID,
                Name: '@Model.Name',
                Questions: questions
            };

            widget = $('#negotiation').NegotiationWidget(settings, initialValues);
        });
        
        function submitNegotiation() {
            var spinner = Kwasant.IFrame.DisplaySpinner();

            var negotiation = widget.getValues();

            var validationErrors = [];
            
            if(negotiation.Questions.length == 0){
                validationErrors.push('Negotiation should have atleast one question');
            }
            
            $.each(negotiation.Questions, function(index, obj) {
                if (obj.Text === undefined ||
                    obj.Text === null ||
                    obj.Text === '') {
                    validationErrors.push('Please provide text for every question.');
                }
                $.each(obj.Answers, function(index, objAnswer) {
                    if(obj.AnswerType != "Timeslot"){
                        if (objAnswer.Text === undefined ||
                        objAnswer.Text === null ||
                        objAnswer.Text === '') {
                            validationErrors.push('Please provide text for every answer.');
                        }
                    }
                });
            });
        
            if (validationErrors.length > 0) {
                var errorMessage = "Please resolve the following issues before saving: \n";

                $.each(validationErrors, function(index, error) {
                    if (errorMessage.indexOf(error) < 0) //Don't do duplicate error messages...
                        errorMessage += "\n - " + error;
                });

                alert(errorMessage);
                spinner.hide();
                return;
            }

          
            SubmitNegotiationForm(spinner,negotiation,function(result) {
                Kwasant.IFrame.Display('/Negotiation/DisplaySendEmailForm?negotiationID=' + result.negotiationID + '&isNew=' + result.isNew,
                {
                    horizontalAlign: 'middle',
                    height: 815,
                    width: 815,
                    modal: true,
                    callback: function (res) {
                        var negotiationMessage = 'Your negotiation was successfully ' + (result.isNew ? 'created' : 'updated');
                        if (res) {
                            negotiationMessage += ' and emails have been dispatched';
                        }
                        Kwasant.IFrame.CloseMe({ 
                            message: negotiationMessage,
                            negotiationID: result.negotiationID
                        });
                        
                    }
                });

                
            })
            .fail(function() {
                alert('An error occured on the server. Your changes have not been saved.');
            })
            .always(function() {
                if (spinner !== null) {
                    spinner.hide();
                }
            });
        }
    </script>
}
@section scripts
{
	@Scripts.Render("~/bundles/js/moment")
	@Scripts.Render("~/bundles/js/bootstraptransition")
	@Scripts.Render("~/bundles/js/collapse")	
	@Scripts.Render("~/bundles/js/bootstrap")
	@Scripts.Render("~/bundles/js/bootstrap-datetimepicker")
    @Scripts.Render("~/bundles/js/modernizr")	
    @Scripts.Render("~/bundles/js/common")
}
@section styles
{
    @Styles.Render("~/bundles/css/bootstrap30")
    @Styles.Render("~/bundles/css/backendcss")
    @Styles.Render("~/bundles/css/select2")
    @Styles.Render("~/bundles/css/bootstrap-datetimepicker")
	
    <link href="@Url.Content("~/Content/css/additionalcss/font-awesome/css/font-awesome.css")" rel="stylesheet" type="text/css" />
}

<form id="f" class="negotiationsidebar">
    <h4>Negotiation</h4>
    <div id="negotiation"></div>

    <div class="space form-actions negotiation-form-actions">
        <input id="btnSave" type="button" value="OK" class="btn pull-left small-dialog-button shadow-button" onclick="submitNegotiation()" />

        <a href="javascript:close();" class="btn cancel-btn small-dialog-button shadow-button pull-left">Cancel</a>
    </div>
</form>